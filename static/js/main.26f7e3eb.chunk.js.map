{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","monstersFiltered","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAIaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAY,iBAAjB,UACI,qBACAC,IAAM,UACNC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEH,mCAAML,EAAMI,QAAQE,KAApB,OACA,4BAAIN,EAAMI,QAAQG,YCJbC,G,MAAW,SAAAR,GACpB,OAAO,qBAAKC,UAAW,YAAhB,SACGD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAC7B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCNjBM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACIZ,UAAU,SACVa,KAAK,SAASF,YAAcA,EAC5BG,SAAWF,MCuCJG,E,kDAxCb,aAAc,IAAD,8BACX,gBAeJH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAdnC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IALJ,E,qDAUf,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,SAAUkB,S,oBAO7C,WAAS,IAAD,EAC0BC,KAAKN,MAA9Bb,EADD,EACCA,SAAUU,EADX,EACWA,YACXU,EAAmBpB,EAASqB,QAAQ,SAAA1B,GAAO,OAC7CA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYc,wBAEpD,OACE,sBAAKhC,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACGa,KAAK,SACJF,YAAY,kBACZC,aAAgBe,KAAKf,eAEzB,cAAC,EAAD,CAAUJ,SAAYoB,W,GAlCVK,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.26f7e3eb.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport './card-styles.css'\r\n\r\nexport const Card = props => (\r\n    <div className = 'card-container'>\r\n        <img\r\n        alt = 'monster'\r\n        src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n        />\r\n        <h2> {props.monster.name} </h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n);","import React from \"react\";\r\n\r\nimport { Card } from '../card/card.component';\r\n\r\nimport './card-list-styles.css';\r\n\r\n\r\nexport const CardList = props => {\r\n    return <div className ='card-list'>\r\n             {props.monsters.map(monster => (\r\n           <Card key={monster.id} monster={monster} />\r\n        ))}   \r\n    </div>;\r\n}","import React from 'react';\r\n\r\nimport './search-box-styles.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n    <input\r\n        className='search'\r\n        type='search' placeholder= {placeholder}\r\n        onChange= {handleChange}\r\n        \r\n        />\r\n);","import { Component } from \"react\";\nimport './App.css';\n\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nclass App extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n\n\ncomponentDidMount() {\n  fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({ monsters: users}));\n}\n\nhandleChange = (e)  => {\n  this.setState({searchField: e.target.value})\n}\n\nrender(){\n  const {monsters, searchField} = this.state;\n  const monstersFiltered = monsters.filter( monster =>\n      monster.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n      );\n  return (\n    <div className='App'>\n      <h1>Monster Rolodex</h1>\n      <SearchBox\n         type='search'\n          placeholder=\"search monsters\"\n          handleChange = {this.handleChange}\n       />\n      <CardList monsters = {monstersFiltered} />     \n     \n    </div>\n  );\n        }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}